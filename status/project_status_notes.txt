1) function call in expression: 100%
2) x = 12;
if (x >= (y / 4)) { <<= detect y not defined
	x = foobar();
}
3) const x = 12;
x = 100
	
Parsing Issues
---------------
principal: a. resolve asap: a
A: when op2 .priority > op1 
B: whe ")" is met, resolve back till "(" 
C: if unary_back is met, resolve backward immeditately
D: IF UNARY FRONT IS MET, push var, and wait to see the next 
E: Skip comments

Code formatter issues:
--------------------------
1:  remove parser added comments: /* #$%^&*: blabla */ (100%)
2:  maintain quote type									(100%)
3:  the following statement compplains error:
x =  {
	x: 1,
	y: 2
}
print (x)
-------------> 
/* noneedtokeet Error: Undefined valrable found at line: 5, position: 29, found token <<< x >>> */
x =  {
	x: 1,
	y: 2
}
print (x)
4: x = ++a +  + b  // should have no space between + and b



BUGS:
-----------------------------
1) (Fixed) IF STATEMENT does not compplain about undefiend variables
   - cause: variable check is only in binary resolver
   - fix: make sure assignment still works after this

2) (Fixed) const x = 1;
let y = 2;
x = 10;			// error for const assignment
print(x+y)

got weir error message: expecting "("

3) (Fixed) INORE Grammar check inside /* */

4) (Fixed) ! operator does not work for parser: x = a ! b => should be invalid

5) save exception

Needed features:
---------------------------
1) teacher notes per class
2) teacher set invisible coe (for testing purpose)

Teaching content:
------------------------
Varaible, value, and data type
  value: "abc" - string type
		 'abc' - string type
		 `abc` - string type
	      100  - integer number type
		  1.245 - float number type
		  [1, 2, 3] - array type
		  {name: 'Kevin Yang', age: 12} - object type
comment:
	/* */ and //
	
seperator:
	CR, , ; : 
CODE BLOCK: () -> EXPRESSION
{ } -> BLOCK SCOPE

		  
Teach this after students can werite simple code, before function is introduced
